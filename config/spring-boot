@SpringBootApplication：包含了@ComponentScan、@Configuration和@EnableAutoConfiguration注解。其中@ComponentScan让spring Boot扫描到Configuration类并把它加入到程序上下文。
@Configuration 等同于spring的XML配置文件，用于启动spring容器；使用Java代码可以检查类型安全。//可以在有该注解的类型使用@Bean 初始化bean,
@EnableAutoConfiguration 自动配置。//可以根据不同的条件进行自动装配，主要是EnableAutoConfigurationImportSelector的功能
   @ConditionalOnClass ： classpath中存在该类时起效
   @ConditionalOnMissingClass ： classpath中不存在该类时起效
   @ConditionalOnBean ： DI容器中存在该类型Bean时起效
   @ConditionalOnMissingBean ： DI容器中不存在该类型Bean时起效
   @ConditionalOnSingleCandidate ： DI容器中该类型Bean只有一个或@Primary的只有一个时起效
   @ConditionalOnExpression ： SpEL表达式结果为true时
   @ConditionalOnProperty ： 参数设置或者值一致时起效
   @ConditionalOnResource ： 指定的文件存在时起效
   @ConditionalOnJndi ： 指定的JNDI存在时起效
   @ConditionalOnJava ： 指定的Java版本存在时起效
   @ConditionalOnWebApplication ： Web应用环境下起效
   @ConditionalOnNotWebApplication ： 非Web应用环境下起效
@ComponentScan 组件扫描，可自动发现和装配一些Bean,修改扫描的地址